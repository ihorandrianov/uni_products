services:
  notifications:
    build:
      context: ../applications
      target: notifications
    env_file: ./.env
    restart: always
    networks:
      - common
    depends_on:
      localstack:
        condition: service_healthy

  products:
    build:
      context: ../applications
      target: products
    env_file: ./.env
    restart: always
    ports:
      - "3000:3000"
    networks:
      - common
    depends_on:
      localstack:
        condition: service_healthy

  psql:
    container_name: psql
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./psql:/var/lib/postgresql/data
    networks:
      - common

  flyway:
    image: flyway/flyway:latest
    command: migrate
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    volumes:
      - ./migrations/sql:/flyway/sql
      - ./migrations/flyway.conf:/flyway/conf/flyway.conf
    depends_on:
      - psql
    networks:
      - common

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks:
      - common

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    healthcheck:
      test: >-
        awslocal sqs list-queues &&
        echo "Checking if init script finished..."  &&
        [ -f /tmp/init-finished ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - "./init-localstack.sh:/etc/localstack/init/ready.d/init-localstack.sh:ro"
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - common

volumes:
  psql:

networks:
  common:
    driver: bridge
